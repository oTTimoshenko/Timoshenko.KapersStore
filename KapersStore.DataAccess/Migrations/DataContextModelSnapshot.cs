// <auto-generated />
using System;
using KapersStore.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KapersStore.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KapersStore.Domain.KaperManagement.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("KaperId");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("KaperId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("KapersStore.Domain.KaperManagement.Kaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("ImageAltText")
                        .HasMaxLength(50);

                    b.Property<string>("ImageSource")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Kapers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description of Kaper1",
                            ImageAltText = "Kaper1",
                            ImageSource = "https://avatars0.githubusercontent.com/u/9064066?v=4&s=460",
                            Name = "Kaper1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description of Kaper2",
                            ImageAltText = "Kaper2",
                            ImageSource = "https://avatars0.githubusercontent.com/u/9064066?v=4&s=460",
                            Name = "Kaper2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description of Kaper3",
                            ImageAltText = "Kaper3",
                            ImageSource = "https://avatars0.githubusercontent.com/u/9064066?v=4&s=460",
                            Name = "Kaper3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description of Kaper4",
                            ImageAltText = "Kaper4",
                            ImageSource = "https://avatars0.githubusercontent.com/u/9064066?v=4&s=460",
                            Name = "Kaper4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description of Kaper5",
                            ImageAltText = "Kaper5",
                            ImageSource = "https://avatars0.githubusercontent.com/u/9064066?v=4&s=460",
                            Name = "Kaper5"
                        });
                });

            modelBuilder.Entity("KapersStore.Domain.KaperManagement.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Days")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("KaperId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("KaperId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Days = 7,
                            Description = "Description1",
                            KaperId = 1,
                            Name = "Subscription1",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 2,
                            Days = 1,
                            Description = "Description2",
                            KaperId = 1,
                            Name = "Subscription2",
                            Price = 1999m
                        },
                        new
                        {
                            Id = 3,
                            Days = 10,
                            Description = "Description3",
                            KaperId = 1,
                            Name = "Subscription3",
                            Price = 1500m
                        },
                        new
                        {
                            Id = 4,
                            Days = 31,
                            Description = "Description4",
                            KaperId = 2,
                            Name = "Subscription4",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 5,
                            Days = 21,
                            Description = "Description5",
                            KaperId = 2,
                            Name = "Subscription5",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 6,
                            Days = 14,
                            Description = "Description6",
                            KaperId = 2,
                            Name = "Subscription6",
                            Price = 1999m
                        },
                        new
                        {
                            Id = 7,
                            Days = 1,
                            Description = "Description7",
                            KaperId = 3,
                            Name = "Subscription7",
                            Price = 1500m
                        },
                        new
                        {
                            Id = 8,
                            Days = 7,
                            Description = "Description8",
                            KaperId = 3,
                            Name = "Subscription8",
                            Price = 1500m
                        },
                        new
                        {
                            Id = 9,
                            Days = 7,
                            Description = "Description9",
                            KaperId = 3,
                            Name = "Subscription9",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 10,
                            Days = 14,
                            Description = "Description10",
                            KaperId = 4,
                            Name = "Subscription10",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 11,
                            Days = 1,
                            Description = "Description11",
                            KaperId = 4,
                            Name = "Subscription11",
                            Price = 1999m
                        },
                        new
                        {
                            Id = 12,
                            Days = 7,
                            Description = "Description12",
                            KaperId = 4,
                            Name = "Subscription12",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 13,
                            Days = 21,
                            Description = "Description13",
                            KaperId = 5,
                            Name = "Subscription13",
                            Price = 1500m
                        },
                        new
                        {
                            Id = 14,
                            Days = 7,
                            Description = "Description14",
                            KaperId = 5,
                            Name = "Subscription14",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 15,
                            Days = 1,
                            Description = "Description15",
                            KaperId = 5,
                            Name = "Subscription15",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 16,
                            Days = 7,
                            Description = "Description16",
                            KaperId = 5,
                            Name = "Subscription16",
                            Price = 1500m
                        });
                });

            modelBuilder.Entity("KapersStore.Domain.UserManagement.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Status")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KapersStore.Domain.KaperManagement.Comment", b =>
                {
                    b.HasOne("KapersStore.Domain.KaperManagement.Kaper", "Kaper")
                        .WithMany("Comments")
                        .HasForeignKey("KaperId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KapersStore.Domain.KaperManagement.Comment", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("KapersStore.Domain.UserManagement.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KapersStore.Domain.KaperManagement.Subscription", b =>
                {
                    b.HasOne("KapersStore.Domain.KaperManagement.Kaper", "Kaper")
                        .WithMany("Subscriptions")
                        .HasForeignKey("KaperId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
